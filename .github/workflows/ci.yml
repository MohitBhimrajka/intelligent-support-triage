name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: 'actions/setup-python@v5'
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: pipx install poetry

    - name: Install dependencies
      run: poetry install

    - name: Install Playwright Browsers
      run: poetry run playwright install --with-deps

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # THIS IS THE SIMPLIFIED AND CORRECTED SETUP STEP
    - name: Setup Cloud Environment
      run: |
        # First, populate the .env file for the setup scripts
        echo "GOOGLE_GENAI_USE_VERTEXAI=1" > .env
        echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}" >> .env
        echo "GOOGLE_CLOUD_LOCATION=${{ secrets.GCP_LOCATION }}" >> .env
        echo "GOOGLE_CLOUD_STORAGE_BUCKET=${{ secrets.GCP_BUCKET_NAME }}" >> .env
        echo "BQ_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
        echo "BQ_DATASET_ID=adk_copilot_dataset" >> .env
        
        # Now, run ONLY the necessary setup scripts using 'poetry run'
        # This solves the ModuleNotFoundError and skips redundant steps.
        echo "Setting up BigQuery..."
        poetry run python scripts/setup_bigquery.py
        
        echo "Setting up Vertex AI RAG Corpus..."
        poetry run python scripts/setup_rag.py

    - name: Run evaluation tests
      run: |
        # Load the .env file created by the setup script (it now contains RAG_CORPUS_NAME)
        set -o allexport
        source .env
        set +o allexport
        
        # Run the tests
        poetry run pytest eval/ -v